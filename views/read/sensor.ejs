<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script type="text/javascript">
    let tableform_flage  = true;
    let HTML_Text_origin = null;
    const FARM   = "<%= data.FARM %>";    
    const USE    = "<%= data.USE %>";    
    const MODULE = "<%= data.MODULE %>";
    let sendData = {
        FARM:   FARM,
        MODULE: MODULE,
        USE:    USE,
        TEMP:   "<%= data.PRE_TEMP %>",
        HUMI:   "<%= data.PRE_HUMI %>",
    }
    let LOG_DATA    = null;
    const LOG_API   = {
        MODULE:MODULE,
        START: null,
        END:   null,
    };

    window.onload = function(){
        LOG_API.START = new Date();
        LOG_API.END   = new Date();
        LOG_API.START.setDate(LOG_API.END.getDate()-1);
        document.getElementById("start").value  = LOG_API.START.toISOString().split("T")[0];
        document.getElementById("end").value    = LOG_API.END.toISOString().split("T")[0];
        submitfn("read/sensor_log",null);
        LOG_API.START = LOG_API.START.toISOString().split("T")[0];
        LOG_API.END   = LOG_API.END.toISOString().split("T")[0];
    }

    function periode(TYPE,DATA) {
        LOG_API[TYPE] = DATA;
        if(LOG_API.END && (LOG_API.START>LOG_API.END)){
            const TEMPORARY = LOG_API.END;
            LOG_API.END     = LOG_API.START;
            LOG_API.START   = TEMPORARY;
            document.getElementById("start").value  = LOG_API.START;
            document.getElementById("end").value    = LOG_API.END;
        }
        console.log(LOG_API);
    }

    function submitfn(API,DATA){
        let POST = false;
        if(API == "update/hiveSensor") {
            POST = true;
            DATA = sendData;            
        }else if(API == "update/hiveFind"){
            POST = true;
            DATA = {FARM:FARM, MODULE:MODULE, LED:1}
        }else if(API == "update/hiveSensorName"){
            POST = true;
            DATA = {MODULE:MODULE, NAME: document.getElementById("hiveName").value}
        }else if(API == "read/sensor_log" && LOG_API.START && LOG_API.END){
            POST = true;
            DATA = LOG_API;
        }else if(API == "delete/sensor"){
            POST = true;
            DATA = sendData;
        }

        if(POST){
            $.ajax({
                contentType: "application/json; charset=utf-8",
                url : '/api/' + API,
                type : 'POST', 
                dataType:'json',
                data : JSON.stringify(DATA), 
                success : function(response) {  
                    console.log(response);
                    if(response.result){    
                        if(API == "update/hiveSensorName" && DATA.NAME){
                            document.getElementById("hive").innerText = DATA.NAME;
                            Swal.fire({              
                                position: 'top',
                                icon:  'success',
                                title: "이름 변경",
                                text:  "벌통 이름이 변경되었습니다.",
                                showConfirmButton: false,                                    
                                timer: 1000
                            })
                        }else if(API == "update/hiveFind"){
                            Swal.fire({              
                                position: 'top',
                                icon:  'success',
                                title: "LED 깜빡임",
                                text:  "LED를 확인해주세요.",
                                showConfirmButton: false,                                    
                                timer: 1000
                            })
                        }else if(API == "update/hiveSensor"){
                            Swal.fire({              
                                position: 'top',
                                icon:  'success',
                                title: "설정 중",
                                text:  "컨트롤러에 명령을 전달했습니다.",
                                showConfirmButton: false,                                    
                                timer: 1000
                            })
                        }else if(API == "read/sensor_log"){       
                            LOG_DATA = response.data.value;
                            Swal.fire({              
                                position: 'top',
                                icon:  'success',
                                title: "로그 데이터",
                                text:  "로그데이터를 받아왔습니다.",
                                showConfirmButton: false,                                    
                                timer: 500
                            })
                            log_view(LOG_DATA);
                        }else if(API == "delete/sensor"){       
                            LOG_DATA = response.data.value;
                            Swal.fire({              
                                position: 'top',
                                icon:  'success',
                                title: "센서 삭제",
                                text:  "완료",
                                showConfirmButton: false,                                    
                                timer: 500
                            })
                            location.href = "/";
                        }
                    }
                }, // success 
                error : function(xhr, status) {
                    alert(xhr + " : " + status);
                    console.log(xhr);
                }            
            }); // $.ajax 
        }
    }

    function downloadFile() {
        if(LOG_DATA && LOG_DATA[0]){
            let csv_file = "Temperature(*C),Humidity(%),Timestamp\r\n";
            for (let index = LOG_DATA.length-1; index >= 0; index--) {
                csv_file += `${LOG_DATA[index].TEMP/100},${LOG_DATA[index].HUMI/100},${LOG_DATA[index].TMST}\r\n`;
            }
            const blob = new Blob([csv_file], {type: 'text/csv;charset=utf-8;'});
            const fileObjectUrl = window.URL.createObjectURL(blob);
            const link = document.createElement("a");
            link.href = fileObjectUrl;
            link.style.display = "none";
            link.download = document.getElementById("hive").innerText + "_" + MODULE + "_LOG_" + LOG_API.START + "_to_" + LOG_API.END + ".csv";
            document.body.appendChild(link);
            link.click();
            link.remove();
            window.URL.revokeObjectURL(fileObjectUrl);
        }else{
            Swal.fire({              
                position: 'top',
                icon: 'error',
                title: "No Data!",
                text: "기록이 없습니다.",
                showConfirmButton: false,                                    
                timer: 1500
            })
        }
    }

    function log_view(DATA) {
        let HTML_Text = "";
        for (const log of DATA) {
            HTML_Text += `<tr>
                            <td>${log.TEMP/100} ℃</td>
                            <td>${log.HUMI/100} %</td>
                            <td>${new Date(log.TMST)} </td>
                        </tr>`;
        }
        document.getElementById("log").innerHTML = HTML_Text;
    }

    function tableform(FARM,MODULE) {
        if(tableform_flage){
            HTML_Text_origin = document.getElementById("TABLE").innerHTML;
            let HTML_Text = `<tr>
                                <td><input id="hiveName" placeholder="벌통 이름"></td>
                                <td onclick="submitfn('update/hiveSensorName',null)"><span class="button primary fit">변경</span></td></td>
                                <td>
                                    <select onchange="selectButton(this)">
                                        <option value= null  >선택</option>
                                        <option value= true  >ON</option>
                                        <option value= false >OFF</option>
                                    </select>
                                </td>
                                <td><input type="number" min="0" max="46" onchange="chageTemp(this)" value="${sendData.TEMP}"></td>
                                <td><input type="number" min="10" max="90" onchange="chageHumi(this)" value="${sendData.HUMI}"></td>
                                <td onclick="submitfn('update/hiveSensor',null)"><span class="button primary fit">변경</span></td>
                            </tr>`;                            
            document.getElementById("TABLE").innerHTML = HTML_Text_origin + HTML_Text;            
            document.getElementById("button1").innerText = "취 소";
            document.getElementById("button2").innerHTML = `<span class="button primary fit" onclick="submitfn('delete/sensor',null)">삭제</span>`;
            tableform_flage = false;
        }else{
            document.getElementById("TABLE").innerHTML = HTML_Text_origin;
            tableform_flage = true;
        }
    }
    function selectButton(target) {
        if(target.value == "true"){       sendData.USE = true;}
        else if(target.value == "false"){ sendData.USE = false;}
    }
    function chageTemp(data) {
        let temp_TEMP = data.value;
        if(temp_TEMP > 46) {    temp_TEMP = 46;}
        else if(temp_TEMP < 0){ temp_TEMP = 0;}
        sendData.TEMP = temp_TEMP;
    }
    function chageHumi(data) {
        let temp_HUMI = data.value;
        if(temp_HUMI > 90) {    temp_HUMI = 90;}
        else if(temp_HUMI < 10){ temp_HUMI = 10;}
        sendData.HUMI = temp_HUMI;
    }
</script>
<!-- Main -->



<div id="main" class="alt">
    <div class="inner">
        <section>
            <div class="table-wrapper">


                <div class="box alt">
					<div class="row gtr-uniform">
						<div class="col-6 col-12-small">응답 대기 중 : 온도 ▶ <%= JSON.stringify(data.SET_TEMP) %> ℃
                                            , 습도 ▶ <%= JSON.stringify(data.SET_HUMI) %> %</div>	
						<div class="col-6 col-12-small">설정 전달 : 온도 ▶ <%= JSON.stringify(data.PRE_TEMP) %> ℃
                                            , 습도 ▶ <%= JSON.stringify(data.PRE_HUMI) %> %</div>	
                        <div class="col-6 col-12-small">S:<input type="date" id="start" onchange="periode('START',this.value)">
                                          ,E:<input type="date" id="end" onchange="periode('END',this.value)"></div>
                        <div class="col-3 col-12-small"><span class="button primary fit" onclick="submitfn('read/sensor_log',null)">불러오기</span></div>
                        <div class="col-3 col-12-small"><span class="button primary fit" onclick="downloadFile()">저장하기</span></div>
					</div>
				</div>

                <table class="alt">
                    <tbody id="TABLE">
                        <tr>
                            <td>벌통</td>
                            <td>상태</td>
                            <td id="cUse"> 사용</td>
                            <td id="cTemp">설정 온도</td>
                            <td id="cHumi">설정 습도</td>
                            <td onclick="tableform()"><span class="button primary fit" id="button1">설정</span></td>
                        </tr>
                        <tr>
                            <td id="hive"><%= data.NAME %></td>
                            <td><%= data.STATE %></td>
                            <td><% let STATE = "정지";
                                if(data.PRE_USE) STATE = "가동"; %><%= STATE %></td>
                            <td><%= data.SET_TEMP %> ℃</td>
                            <td><%= data.SET_HUMI %> %</td>
                            <td>
                                <span class="button primary fit" onclick="submitfn('update/hiveFind',null)">찾기</span>
                                <span id="button2"></span>
                            </td>
                        </tr>                        
                    </tbody>
                </table>

                <table class="alt">
                    <thead>
                        <tr>
                            <th>온도</th>
                            <th>습도</th>
                            <th>시간</th>
                        </tr>
                    </thead>
                    <tbody id="log">
                    </tbody>
                </table>
            </div>
        </section>
        
    </div>
</div>
